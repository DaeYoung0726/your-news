name: Continuous Deployment

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
      # 1. Compare branch 코드 내려 받기
      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # 2. 자바 환경 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Spring 환경 변수 설정
      - name: Set up application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
          touch ./application-mail.yml
          echo "${{ secrets.APPLICATION_MAIL }}" > ./application-mail.yml

      # 4. Docker 이미지 build 및 push
      - name: docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/your-news:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/your-news:latest

      # 5. ec2 pull
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker system prune -a -f
            docker-compose down
            docker rmi ${{ secrets.DOCKER_USERNAME }}/your-news:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/your-news:latest
            docker-compose up -d
